for(i in 1:R){
X <- rexp(n,lambda)
CIs[i,] = c(a/2/sum(X),1/mean(X),b/2/sum(X))
}
## plot the CIs
plot(0, xlim=c(0, R), ylim=c(min(CIs)-0.02,
max(CIs)+0.02), type="n",xlab="Sample ID",ylab="")
count <- 0
for (i in 1:nrow(CIs)) {
if (CIs[i, 1]>lambda | CIs[i, 3]<lambda){
color = "red"
count = count +1
if(CIs[i, 1]>lambda)
text(i,CIs[i, 3]+0.02,count)
else
text(i,CIs[i, 1]-0.02,count)
}else{
color = "blue"
}
lines(x=rep(i, 2), y=c(CIs[i, 1], CIs[i, 3]))
points(x=i, y=CIs[i,2], pch=16, col=color)
}
abline(h=lambda)
R <- 100
CIs <- matrix(0,R,3)
for(i in 1:R){
X <- rexp(n,lambda)
CIs[i,] = c(a/2/sum(X),1/mean(X),b/2/sum(X))
}
## plot the CIs
plot(0, xlim=c(0, R), ylim=c(min(CIs)-0.02,
max(CIs)+0.02), type="n",xlab="Sample ID",ylab="")
count <- 0
for (i in 1:nrow(CIs)) {
if (CIs[i, 1]>lambda | CIs[i, 3]<lambda){
color = "red"
count = count +1
if(CIs[i, 1]>lambda)
text(i,CIs[i, 3]+0.02,count)
else
text(i,CIs[i, 1]-0.02,count)
}else{
color = "blue"
}
lines(x=rep(i, 2), y=c(CIs[i, 1], CIs[i, 3]))
points(x=i, y=CIs[i,2], pch=16, col=color)
}
abline(h=lambda)
R <- 100
CIs <- matrix(0,R,3)
for(i in 1:R){
X <- rexp(n,lambda)
CIs[i,] = c(a/2/sum(X),1/mean(X),b/2/sum(X))
}
## plot the CIs
plot(0, xlim=c(0, R), ylim=c(min(CIs)-0.02,
max(CIs)+0.02), type="n",xlab="Sample ID",ylab="")
count <- 0
for (i in 1:nrow(CIs)) {
if (CIs[i, 1]>lambda | CIs[i, 3]<lambda){
color = "red"
count = count +1
if(CIs[i, 1]>lambda)
text(i,CIs[i, 3]+0.02,count)
else
text(i,CIs[i, 1]-0.02,count)
}else{
color = "blue"
}
lines(x=rep(i, 2), y=c(CIs[i, 1], CIs[i, 3]))
points(x=i, y=CIs[i,2], pch=16, col=color)
}
abline(h=lambda)
blogdown::serve_site()
blogdown::serve_site()
blogdown::serve_site()
blogdown::serve_site()
lambda <- 2
n <- 1000
X <- rexp(n,lambda)
# find out the confidence interval (CI)
alpha <- 0.05
a <- qchisq(p=alpha/2,df=2*n)
b <- qchisq(p=1-alpha/2,df=2*n)
CI <- c(a/2/sum(X),b/2/sum(X))
cat((1-alpha)*100,"% CI is",CI)
?cat
cat((1-alpha)*100,"% CI is",CI,seq="")
cat((1-alpha)*100,"% CI is",CI,sep="")
cat((1-alpha)*100,"% CI is",CI,sep="")
cat((1-alpha)*100,"% CI is [",CI[1]," ", CI[2],"]",sep="")
cat((1-alpha)*100,"% CI is [",CI[1],", ", CI[2],"]",sep="")
?abline
abline(h = -1:5, v = -2:3, col = "lightgray", lty = 3)
source('D:/Dropbox/courses/2018-2019-2Stat/R/CI.R')
source('D:/Dropbox/courses/2018-2019-2Stat/R/CI.R')
source('D:/Dropbox/courses/2018-2019-2Stat/R/CI.R')
source('D:/Dropbox/courses/2018-2019-2Stat/R/CI.R')
source('D:/Dropbox/courses/2018-2019-2Stat/R/CI.R')
lambda <- 2
n <- 1000
X <- rexp(n,lambda)
X
plot(X)
lambda <- 2
n <- 100
X <- rexp(n,lambda)
X
lambda <- 2
n <- 100
X <- rexp(n,lambda)
X
alpha <- 0.05
a <- qchisq(p=alpha/2,df=2*n)
b <- qchisq(p=1-alpha/2,df=2*n)
CI <- c(a/2/sum(X),b/2/sum(X))
cat((1-alpha)*100,"% CI is
[",CI[1],", ", CI[2],"]",sep="")
R <- 100
CIs <- matrix(0,R,3)
for(i in 1:R){
X <- rexp(n,lambda)
CIs[i,] = c(a/2/sum(X),1/mean(X),b/2/sum(X))
}
## plot the CIs
plot(0, xlim=c(0, R), ylim=c(min(CIs)-0.02,
max(CIs)+0.02), type="n",xlab="Sample ID",ylab="")
count <- 0
for (i in 1:nrow(CIs)) {
if (CIs[i, 1]>lambda | CIs[i, 3]<lambda){
color = "red"
count = count +1
if(CIs[i, 1]>lambda)
text(i,CIs[i, 3]+0.02,count)
else
text(i,CIs[i, 1]-0.02,count)
}else{
color = "blue"
}
lines(x=rep(i, 2), y=c(CIs[i, 1], CIs[i, 3]))
points(x=i, y=CIs[i,2], pch=16, col=color)
}
abline(h=lambda,lty = 3,col="red")
R <- 100
CIs <- matrix(0,R,3)
for(i in 1:R){
X <- rexp(n,lambda)
CIs[i,] = c(a/2/sum(X),1/mean(X),b/2/sum(X))
}
## plot the CIs
plot(0, xlim=c(0, R), ylim=c(min(CIs)-0.02,
max(CIs)+0.02), type="n",xlab="Sample ID",ylab="")
count <- 0
for (i in 1:nrow(CIs)) {
if (CIs[i, 1]>lambda | CIs[i, 3]<lambda){
color = "red"
count = count +1
if(CIs[i, 1]>lambda)
text(i,CIs[i, 3]+0.02,count)
else
text(i,CIs[i, 1]-0.02,count)
}else{
color = "blue"
}
lines(x=rep(i, 2), y=c(CIs[i, 1], CIs[i, 3]))
points(x=i, y=CIs[i,2], pch=16, col=color)
}
abline(h=lambda,lty = 3,col="red")
R <- 100
CIs <- matrix(0,R,3)
for(i in 1:R){
X <- rexp(n,lambda)
CIs[i,] = c(a/2/sum(X),1/mean(X),b/2/sum(X))
}
## plot the CIs
plot(0, xlim=c(0, R), ylim=c(min(CIs)-0.02,
max(CIs)+0.02), type="n",xlab="Sample ID",ylab="")
count <- 0
for (i in 1:nrow(CIs)) {
if (CIs[i, 1]>lambda | CIs[i, 3]<lambda){
color = "red"
count = count +1
if(CIs[i, 1]>lambda)
text(i,CIs[i, 3]+0.02,count)
else
text(i,CIs[i, 1]-0.02,count)
}else{
color = "blue"
}
lines(x=rep(i, 2), y=c(CIs[i, 1], CIs[i, 3]))
points(x=i, y=CIs[i,2], pch=16, col=color)
}
abline(h=lambda,lty = 3,col="red")
knitr::opts_chunk$set(echo = FALSE)
t = seq(-3,3,by=0.01)
y = pnorm(t)
x = rnorm(100)
par(mfrow=c(2,1),mgp=c(1.5,0.8,0),mar=.1+c(3,3,2,1))
Fn = ecdf(x[1:10])
plot(Fn,verticals=TRUE,do.points=FALSE,main="n=10",xlim=c(-3,3))
lines(t,y,col="red")
Fn = ecdf(x[1:100])
plot(Fn,verticals=TRUE,do.points=FALSE,main="n=100",xlim=c(-3,3))
lines(t,y,col="red")
Fn1
if(!require(dslabs))
install.packages("dslabs")
attach(heights)
female_height = height[sex=="Female"]
male_height = height[sex=="Male"]
# par(mfrow = c(3,1))
par(mar=c(2,2,1,1))
r=hist(height,breaks=10,ylim=c(0,600),col = "lightblue", border = "pink")
text(r$mids,r$counts,r$counts,adj=c(.5,-.5),cex=1.2)
#hist(male_height)
#hist(female_height)
detach(heights)
source('D:/Dropbox/courses/academic/public/course/homework5/readdata.R', encoding = 'UTF-8')
getwd()
blogdown::serve_site()
getwd()
knitr::opts_chunk$set(echo = TRUE)
# 下面命令用于查看目前工作目录，然后把数据
# data.RData放进该工作目录
getwd()
# 导入数据，如果该数据没有放入工作目录，
# 则需要用绝对路径，或者用setwd()更改工作目录
# 至数据集所在文件夹
load("data.RData")
getwd()
ls()
load("data.RData")
# 下面命令用于查看目前工作目录，然后把数据
# data.RData放进该工作目录
getwd()
# 导入数据，如果该数据没有放入工作目录，
# 则需要用绝对路径，或者用setwd()更改工作目录
# 至数据集所在文件夹
load("data.RData")
# 加载数据
load("https://hezhijian.netlify.com/course/hw5/data.RData")
# 加载数据
load("https://hezhijian.netlify.com/course/homework5/data.RData")
load("https://hezhijian.netlify.com/course/homework5/data.RData")
?load
# 加载数据
load(rul("https://hezhijian.netlify.com/course/homework5/data.RData"))
# 加载数据
load(url("https://hezhijian.netlify.com/course/homework5/data.RData"))
# 便于直接使用该数据集的两个变量height和sex用attach命令
attach(heights)
load(url("https://hezhijian.netlify.com/course/homework5/data.RData"))
rm(list=ls())
load(url("https://hezhijian.netlify.com/course/homework5/data.RData"))
x = rnorm(100) #生成100个标准正态的样本
Fn1 = ecdf(x[1:10]) #计算前10个样本对应的经验分布函数
Fn2 = ecdf(x[1:100]) #计算前100个样本对应的经验分布函数
Fn1
plot(Fn1)
plot(Fn,verticals=TRUE,do.points=FALSE,main="n=10",xlim=c(-3,3))
Fn = ecdf(x[1:10])
plot(Fn,verticals=TRUE,do.points=FALSE,main="n=10",xlim=c(-3,3))
plot(Fn)
t = seq(-3,3,by=0.01)
y = pnorm(t)
for(i in 1:25){
x = rnorm(100)
plot(ecdf(x))
lines(t,y,col="red")
Sys.sleep(.5)
}
t = seq(-3,3,by=0.01)
y = pnorm(t)
for(i in 1:25){
x = rnorm(100)
plot(ecdf(x),verticals=TRUE,do.points=FALSE,main="n=100",xlim=c(-3,3))
lines(t,y,col="red")
Sys.sleep(.5)
}
c("n=",10)
paste("n=","10")
t = seq(-3,3,by=0.01)
y = pnorm(t)
n = 10
for(i in 1:25){
x = rnorm(100)
plot(ecdf(x),verticals=TRUE,do.points=FALSE,main=paste("n =",n),xlim=c(-3,3))
lines(t,y,col="red")
Sys.sleep(.5)
}
t = seq(-3,3,by=0.01)
y = pnorm(t)
n = 10
for(i in 1:25){
x = rnorm(n)
plot(ecdf(x),verticals=TRUE,do.points=FALSE,main=paste("n =",n),xlim=c(-3,3))
lines(t,y,col="red")
Sys.sleep(.5)
}
t = seq(-3,3,by=0.01)
y = pnorm(t)
n = 100
for(i in 1:25){
x = rnorm(n)
plot(ecdf(x),verticals=TRUE,do.points=FALSE,main=paste("n =",n),xlim=c(-3,3))
lines(t,y,col="red")
Sys.sleep(.5)
}
t = seq(-3,3,by=0.01)
y = pnorm(t)
n = 1000
for(i in 1:25){
x = rnorm(n)
plot(ecdf(x),verticals=TRUE,do.points=FALSE,main=paste("n =",n),xlim=c(-3,3))
lines(t,y,col="red")
Sys.sleep(.5)
}
t = seq(-3,3,by=0.01)
y = pt(t,3)
n = 100
for(i in 1:30){
x = rt(n,3)
plot(ecdf(x),verticals=TRUE,do.points=FALSE,main=paste("n =",n),xlim=c(-3,3))
lines(t,y,col="red")
Sys.sleep(.5)
}
t = seq(-3,3,by=0.01)
y = pt(t,3)
n = 1000
for(i in 1:30){
x = rt(n,3)
plot(ecdf(x),verticals=TRUE,do.points=FALSE,main=paste("n =",n),xlim=c(-3,3))
lines(t,y,col="red")
Sys.sleep(.5)
}
for(i in 1:30){
x = rt(n,3)
plot(ecdf(x),verticals=TRUE,do.points=FALSE,main=paste("n =",n),xlim=c(-3,3))
lines(t,y,col="red")
text(-2,0.8,paste("i =",i))
Sys.sleep(.5)
}
t = seq(-3,3,by=0.01)
y = pnorm(t,3)
n = 10
for(i in 1:30){
x = rnorm(n,3)
plot(ecdf(x),verticals=TRUE,do.points=FALSE,main=paste("n =",n),xlim=c(-3,3))
lines(t,y,col="red")
text(-2,0.8,paste("i =",i))
Sys.sleep(.5)
}
t = seq(-3,3,by=0.01)
y = pnorm(t)
n = 10
for(i in 1:30){
x = rnorm(n)
plot(ecdf(x),verticals=TRUE,do.points=FALSE,main=paste("n =",n),xlim=c(-3,3))
lines(t,y,col="red")
text(-2,0.8,paste("i =",i))
Sys.sleep(.5)
}
source('D:/Dropbox/courses/2018-2019-2Stat/R/t.R')
source('D:/Dropbox/courses/2018-2019-2Stat/R/t.R')
source('D:/Dropbox/courses/2018-2019-2Stat/R/t.R')
if(!require(dslabs))
install.packages("dslabs")
attach(heights)
attach(heights)
heights
hist(height)
?hist
par(mar=c(2,2,1,1))
r=hist(height)
text(r$mids,r$counts,r$counts,adj=c(.5,-.5),cex=1.2)
r=hist(height)
hist(height,freq=FALSE)
r=hist(height)
text(r$mids,r$counts,r$counts,adj=c(.5,-.5),cex=1.2)
# kenerel density
plot(density(height,from = min(height), to = max(height)))
plot(density(male_height,from = 50,to=85),col="red",
lwd=2,ylim=c(0,.14),main="Keneral density")
plot(density(height,from = 50,to=85),col="red",
lwd=2,ylim=c(0,.14),main="Keneral density")
# kenerel density
plot(density(height,from = 50,to=85),col="red",
lwd=2,main="Keneral density")
hist(height,ylim=c(0,.115),freq=FALSE,
main="Histogram vs. Kernel density")
lines(density(height,from = 50,to=85),col="red",lwd=2)
plot(density(male_height,from = 50,to=85),
col="red",lwd=2,ylim=c(0,.14),main="Male vs. Female")
lines(density(female_height,from = 50,to=85),
col="blue",lwd=2)
legend(74,0.12,legend = c("Male","Female"),
lty = c(1,1),col=c("red","blue"),lwd=c(2,2))
plot(density(male_height,from = 50,to=85),
col="red",lwd=2,ylim=c(0,.14),main="Male vs. Female")
lines(density(female_height,from = 50,to=85),
col="blue",lwd=2)
legend(74,0.12,legend = c("Male","Female"),
lty = c(1,1),col=c("red","blue"),lwd=c(2,2))
plot(density(male_height,from = 50,to=85),
col="red",lwd=2,ylim=c(0,.14),main="Male vs. Female")
lines(density(female_height,from = 50,to=85),
col="blue",lwd=2)
legend(74,0.12,legend = c("Male","Female"),
lty = c(1,1),col=c("red","blue"),lwd=c(2,2))
plot(density(male_height,from = 50,to=85),
col="red",lwd=2,ylim=c(0,.14),main="Male vs. Female")
female_height = height[sex=="Female"]
male_height = height[sex=="Male"]
plot(density(male_height,from = 50,to=85),
col="red",lwd=2,ylim=c(0,.14),main="Male vs. Female")
lines(density(female_height,from = 50,to=85),
col="blue",lwd=2)
legend(74,0.12,legend = c("Male","Female"),
lty = c(1,1),col=c("red","blue"),lwd=c(2,2))
r=hist(height)
text(r$mids,r$counts,r$counts,adj=c(.5,-.5),cex=1.2)
dslabs
source('D:/Dropbox/courses/2018-2019-2Stat/R/t.R')
source('D:/Dropbox/courses/2018-2019-2Stat/R/t.R')
if(!require(dslabs))
install.packages("dslabs")
attach(heights)
r=hist(height)
text(r$mids,r$counts,r$counts,adj=c(.5,-.5),cex=1.2)
hist(height,freq=FALSE)
plot(density(height,from = 50,to=85),col="red",
lwd=2,main="Keneral density")
hist(height,ylim=c(0,.115),freq=FALSE,
main="Histogram vs. Kernel density")
lines(density(height,from = 50,to=85),col="red",lwd=2)
source('D:/Dropbox/courses/2018-2019-2Stat/R/t.R')
source('D:/Dropbox/courses/2018-2019-2Stat/R/t.R')
x = rnorm(n)
plot(ecdf(x)）
plot(ecdf(x))
x = rnorm(n)
plot(ecdf(x))
heights
heights$sex
length(heights)
size(heights)
source('D:/Dropbox/courses/2018-2019-2Stat/R/t.R')
source('D:/Dropbox/courses/2018-2019-2Stat/R/t.R')
x = rnorm(n)
X
x
plot(ecdf(x))
n = 10
x = rnorm(n)
plot(ecdf(x))
?ecdf
heights
heights$sex
attach(heights)
sex
heights$height
r=hist(height)
text(r$mids,r$counts,r$counts,adj=c(.5,-.5),cex=1.2)
hist(height,freq=FALSE)
plot(density(height,from = 50,to=85),col="red",
lwd=2,main="Kenerel density")
# Histogram vs. Kernel density
hist(height,ylim=c(0,.115),freq=FALSE,
main="Histogram vs. Kernel density")
lines(density(height,from = 50,to=85),col="red",lwd=2)
# female vs. male
female_height = height[sex=="Female"]
male_height = height[sex=="Male"]
plot(density(male_height,from = 50,to=85),
col="red",lwd=2,ylim=c(0,.14),main="Male vs. Female")
lines(density(female_height,from = 50,to=85),
col="blue",lwd=2)
legend(74,0.12,legend = c("Male","Female"),
lty = c(1,1),col=c("red","blue"),lwd=c(2,2))
blogdown::serve_site()
blogdown::serve_site()
knitr::opts_chunk$set(echo = TRUE)
curve(1-pnorm(qnorm(0.95)-10*x),0,1)
curve(1-pnorm(qnorm(0.975)-10*x)+pnorm(qnorm(0.025)-10*x),0,1)
lines(1-pnorm(qnorm(0.975)-10*x)+pnorm(qnorm(0.025)-10*x),0,1)
?curve
op <- par(mfrow = c(2, 2))
curve(x^3 - 3*x, -2, 2)
curve(x^2 - 2, add = TRUE, col = "violet")
par(mfrow = c(2, 2))
curve(1-pnorm(qnorm(0.95)-10*x),0,1)
curve(1-pnorm(qnorm(0.975)-10*x)+pnorm(qnorm(0.025)-10*x),0,1)
par(mfrow = c(2, 2))
curve(1-pnorm(qnorm(0.95)-10*x),0,1)
curve(1-pnorm(qnorm(0.975)-10*x)+pnorm(qnorm(0.025)-10*x),0,1)
par(mfrow = c(2, 2))
curve(1-pnorm(qnorm(0.95)-10*x),0,1)
curve(1-pnorm(qnorm(0.975)-10*x)+pnorm(qnorm(0.025)-10*x),0,1)
op <- par(mfrow = c(2, 2))
curve(1-pnorm(qnorm(0.95)-10*x),0,1)
curve(1-pnorm(qnorm(0.975)-10*x)+pnorm(qnorm(0.025)-10*x),0,1)
op <- par(mfrow = c(2, 2))
curve(1-pnorm(qnorm(0.95)-10*x),0,1)
curve(1-pnorm(qnorm(0.975)-10*x)+pnorm(qnorm(0.025)-10*x),0,1)
curve(1-pnorm(qnorm(0.95)-10*x),0,1)
curve(1-pnorm(qnorm(0.975)-10*x)+pnorm(qnorm(0.025)-10*x),0,1,add = TRUE, col = "violet")
curve(1-pnorm(qnorm(0.95)-10*x),0,1,ylab="power functions")
curve(1-pnorm(qnorm(0.975)-10*x)+pnorm(qnorm(0.025)-10*x),0,1,add = TRUE, col = "violet")
curve(1-pnorm(qnorm(0.95)-10*x),0,1,ylab="power functions")
curve(1-pnorm(qnorm(0.975)-10*x)+pnorm(qnorm(0.025)-10*x),0,1,
add = TRUE, col = "red")
legend(0.6,0.6,legend=c("W","W'"),col=c("black","red"),lty = c(1,1))
