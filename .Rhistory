?kable
2^(-9)
0.1^(10)+0.9^(10)
2^(-9)
10/4^3
1-0.15625
knitr::opts_chunk$set(echo = TRUE)
p = seq(0,1,by=0.001)
power = 3*p^2-2*p^3
plot(p,power,type="l")
pchisq(16.82,18)
?t.test
?binom.test
blogdown::serve_site()
blogdown::serve_site()
knitr::opts_chunk$set(echo = TRUE)
x = seq(0,001,10,by=0.001)
x = seq(0.001,10,by=0.001)
n = 10
y1 = dchisq(x,2*n)
y2  = cchisq(x,2*n+2)
x = seq(0.001,10,by=0.001)
n = 10
y1 = dchisq(x,2*n)
y2  = dchisq(x,2*n+2)
plot(x,y1,type="l")
lines(x,y2,col="red")
x = seq(0.001,100,by=0.001)
n = 10
y1 = dchisq(x,2*n)
y2  = dchisq(x,2*n+2)
plot(x,y1,type="l")
lines(x,y2,col="red")
n = 10
x = seq(0.001,3*n,by=0.001)
y1 = dchisq(x,2*n)
y2  = dchisq(x,2*n+2)
plot(x,y1,type="l")
lines(x,y2,col="red")
n = 10
x = seq(0,n+2*sqrt(2*n),by=0.001)
y1 = dchisq(x,2*n)
y2  = dchisq(x,2*n+2)
plot(x,y1,type="l")
lines(x,y2,col="red")
n = 10
x = seq(0,n+3*sqrt(2*n),by=0.001)
y1 = dchisq(x,2*n)
y2  = dchisq(x,2*n+2)
plot(x,y1,type="l")
lines(x,y2,col="red")
n = 10
x = seq(0,n+10*sqrt(2*n),by=0.001)
y1 = dchisq(x,2*n)
y2  = dchisq(x,2*n+2)
plot(x,y1,type="l")
lines(x,y2,col="red")
n = 100
x = seq(0,n+10*sqrt(2*n),by=0.001)
y1 = dchisq(x,2*n)
y2  = dchisq(x,2*n+2)
plot(x,y1,type="l")
lines(x,y2,col="red")
n = 100
x = seq(max(n-10*sqrt(2*n),0),n+10*sqrt(2*n),by=0.001)
y1 = dchisq(x,2*n)
y2  = dchisq(x,2*n+2)
plot(x,y1,type="l")
lines(x,y2,col="red")
n-10*sqrt(2*n)
n = 100
x = seq(0,n+10*sqrt(2*n),by=0.001)
y1 = dchisq(x,2*n)
y2  = dchisq(x,2*n+2)
plot(x,y1,type="l")
lines(x,y2,col="red")
n = 100
x = seq(0,1000,by=0.001)
y1 = dchisq(x,2*n)
y2  = dchisq(x,2*n+2)
plot(x,y1,type="l")
lines(x,y2,col="red")
n = 100
x = seq(0,400,by=0.001)
y1 = dchisq(x,2*n)
y2  = dchisq(x,2*n+2)
plot(x,y1,type="l")
lines(x,y2,col="red")
n = 20
x = seq(0,50,by=0.001)
y1 = dchisq(x,2*n)
y2  = dchisq(x,2*n+2)
plot(x,y1,type="l")
lines(x,y2,col="red")
n = 20
x = seq(0,100,by=0.001)
y1 = dchisq(x,2*n)
y2  = dchisq(x,2*n+2)
plot(x,y1,type="l")
lines(x,y2,col="red")
n = 20
x = seq(0,100,by=0.001)
y1 = dchisq(x,n)
y2  = dchisq(x,n+2)
plot(x,y1,type="l")
lines(x,y2,col="red")
legend(60,0.04,legend=("n=20","n=22"),lty=c(1,1))
n = 20
x = seq(0,50,by=0.001)
y1 = dchisq(x,n)
y2  = dchisq(x,n+2)
plot(x,y1,type="l")
lines(x,y2,col="red")
legend(60,0.04,legend=c("n=20","n=22"),lty=c(1,1))
n = 20
x = seq(0,50,by=0.001)
y1 = dchisq(x,n)
y2  = dchisq(x,n+2)
plot(x,y1,type="l")
lines(x,y2,col="red")
legend(40,0.06,legend=c("n=20","n=22"),lty=c(1,1))
n = 20
x = seq(0,50,by=0.001)
y1 = dchisq(x,n)
y2  = dchisq(x,n+2)
plot(x,y1,type="l")
lines(x,y2,col="red")
legend(40,0.06,legend=c("n=20","n=22"),lty=c(1,1),col=c("blue","red"))
n = 20
x = seq(0,50,by=0.001)
y1 = dchisq(x,n)
y2  = dchisq(x,n+2)
plot(x,y1,type="l")
lines(x,y2,col="red")
legend(40,0.06,legend=c("n=20","n=22"),lty=c(1,1),col=c("blue","red"),ylab="y")
n = 20
x = seq(0,50,by=0.001)
y1 = dchisq(x,n)
y2  = dchisq(x,n+2)
plot(x,y1,type="l")
lines(x,y2,col="red",ylab="y")
legend(40,0.06,legend=c("n=20","n=22"),lty=c(1,1),col=c("blue","red"))
n = 20
x = seq(0,50,by=0.001)
y1 = dchisq(x,n)
y2  = dchisq(x,n+2)
plot(x,y1,type="l")
lines(x,y2,col="red",ylab="y")
legend(40,0.06,legend=c("n=20","n=22"),lty=c(1,1),col=c("blue","red"))
n = 50
x = seq(0,100,by=0.001)
y1 = dchisq(x,n)
y2  = dchisq(x,n+2)
plot(x,y1,type="l")
lines(x,y2,col="red",ylab="y")
legend(40,0.06,legend=c("n=100","n=102"),lty=c(1,1),col=c("blue","red"))
n = 20
x = seq(0,50,by=0.001)
y1 = dchisq(x,n)
y2  = dchisq(x,n+2)
plot(x,y1,type="l")
lines(x,y2,col="red",ylab="y")
legend(40,0.06,legend=c("n=20","n=22"),lty=c(1,1),col=c("blue","red"))
n = 100
x = seq(0,100,by=0.001)
y1 = dchisq(x,n)
y2  = dchisq(x,n+2)
plot(x,y1,type="l")
lines(x,y2,col="red",ylab="y")
legend(40,0.06,legend=c("n=100","n=102"),lty=c(1,1),col=c("blue","red"))
n = 20
x = seq(0,50,by=0.001)
y1 = dchisq(x,n)
y2  = dchisq(x,n+2)
plot(x,y1,type="l")
lines(x,y2,col="red",ylab="y")
legend(40,0.06,legend=c("n=20","n=22"),lty=c(1,1),col=c("blue","red"))
n = 50
x = seq(0,100,by=0.001)
y1 = dchisq(x,n)
y2  = dchisq(x,n+2)
plot(x,y1,type="l")
lines(x,y2,col="red",ylab="y")
legend(40,0.06,legend=c("n=100","n=102"),lty=c(1,1),col=c("blue","red"))
n = 20
x = seq(0,50,by=0.001)
y1 = dchisq(x,n)
y2  = dchisq(x,n+2)
plot(x,y1,type="l")
lines(x,y2,col="red",ylab="y")
legend(40,0.06,legend=c("n=20","n=22"),lty=c(1,1),col=c("blue","red"))
n = 100
x = seq(0,150,by=0.001)
y1 = dchisq(x,n)
y2  = dchisq(x,n+2)
plot(x,y1,type="l")
lines(x,y2,col="red",ylab="y")
legend(40,0.06,legend=c("n=100","n=102"),lty=c(1,1),col=c("blue","red"))
n = 20
x = seq(0,50,by=0.001)
y1 = dchisq(x,n)
y2  = dchisq(x,n+2)
plot(x,y1,type="l")
lines(x,y2,col="red",ylab="y")
legend(40,0.06,legend=c("n=20","n=22"),lty=c(1,1),col=c("blue","red"))
n = 100
x = seq(50,150,by=0.001)
y1 = dchisq(x,n)
y2  = dchisq(x,n+2)
plot(x,y1,type="l")
lines(x,y2,col="red",ylab="y")
legend(40,0.06,legend=c("n=100","n=102"),lty=c(1,1),col=c("blue","red"))
legend(40,0.06,legend=c("n=100","n=102"),lty=c(1,1),col=c("blue","red"))
n = 20
x = seq(0,50,by=0.001)
y1 = dchisq(x,n)
y2  = dchisq(x,n+2)
par(mar=c(4,4,2,1),mfcol=c(1,2))
plot(x,y1,type="l")
lines(x,y2,col="red",ylab="y")
legend(40,0.06,legend=c("n=20","n=22"),lty=c(1,1),col=c("blue","red"))
n = 100
x = seq(50,150,by=0.001)
y1 = dchisq(x,n)
y2  = dchisq(x,n+2)
par(mar=c(4,4,2,1))
plot(x,y1,type="l")
lines(x,y2,col="red",ylab="y")
legend(120,0.025,legend=c("n=100","n=102"),lty=c(1,1),col=c("blue","red"))
qnorm(0.1)
qnorm(0.9)
-1.28/2+10
0.36*2
pnorm(0.72)
?uniroot
n = 10
alpha = 0.5
a = qchisq(alpha/2,2*n)
b = qchisq(alpha/2,2*n+2)
a
b
myfun <- function(c,n,alpha){
pchisq(qchisq(pchisq(c,2*n)+1-alpha,2*n),2*n+2)-pchisq(c,2*n+2)-1+alpha
}
n = 10
alpha = 0.5
a = qchisq(alpha/2,2*n)
b = qchisq(alpha/2,2*n+2)
uniroot(myfun,interval = c(a,b),tol = 1e-9)
myfun <- function(c,n,alpha){
pchisq(qchisq(pchisq(c,2*n)+1-alpha,2*n),2*n+2)-pchisq(c,2*n+2)-1+alpha
}
n = 10
alpha = 0.5
a = qchisq(alpha/2,2*n)
b = qchisq(alpha/2,2*n+2)
uniroot(myfun,n=n,alpha=alpha,interval = c(a,b),tol = 1e-9)
myfun <- function(c,n,alpha){
pchisq(qchisq(pchisq(c,2*n)+1-alpha,2*n),2*n+2)-pchisq(c,2*n+2)-1+alpha
}
n = 10
alpha = 0.5
a = qchisq(alpha/2,2*n)
b = qchisq(alpha/2,2*n+2)
uniroot(myfun,n=n,alpha=alpha,interval = c(a,b))
myfun <- function(c,n,alpha){
pchisq(qchisq(pchisq(c,2*n)+1-alpha,2*n),2*n+2)-pchisq(c,2*n+2)-1+alpha
}
n = 10
alpha = 0.5
a = qchisq(alpha/2,2*n)
b = qchisq(alpha/2,2*n+2)
r = uniroot(myfun,n=n,alpha=alpha,interval = c(a,b))
r$root
myfun <- function(c,n,alpha){
pchisq(qchisq(pchisq(c,2*n)+1-alpha,2*n),2*n+2)-pchisq(c,2*n+2)-1+alpha
}
n = 10
alpha = 0.5
a = qchisq(alpha/2,2*n)
b = qchisq(alpha/2,2*n+2)
r = uniroot(myfun,n=n,alpha=alpha,interval = c(a,b))
c1 = r$root
c2 = qchisq(pchisq(c1,2*n)+1-alpha,2*n)
c1,c2
c1
c2
myfun <- function(c,n,alpha){
pchisq(qchisq(pchisq(c,2*n)+1-alpha,2*n),2*n+2)-pchisq(c,2*n+2)-1+alpha
}
n = 10
alpha = 0.5
a = qchisq(alpha/2,2*n)
b = qchisq(alpha/2,2*n+2)
r = uniroot(myfun,n=n,alpha=alpha,interval = c(a,b))
c1 = r$root
c2 = qchisq(pchisq(c1,2*n)+1-alpha,2*n)
err1 = pchisq(c2,2*n)-pchisq(c1,2*n)-1+alpha #check the error for eq. (1)
err2 = pchisq(c2,2*n+2)-pchisq(c1,2*n+2)-1+alpha #check the error for eq. (2)
err1
err2
myfun <- function(c,n,alpha){
pchisq(qchisq(pchisq(c,2*n)+1-alpha,2*n),2*n+2)-pchisq(c,2*n+2)-1+alpha
}
n = 10
alpha = 0.5
a = qchisq(alpha/2,2*n)
b = qchisq(alpha/2,2*n+2)
r = uniroot(myfun,n=n,alpha=alpha,interval = c(a,b))
c1 = r$root
c2 = qchisq(pchisq(c1,2*n)+1-alpha,2*n)
err1 = pchisq(c2,2*n+2)-pchisq(c1,2*n+2)-1+alpha #check the error for eq. (2)
## check the error if we use the approximate method
c11 = qchisq(alpha/2,2*n)
c22 = qchisq(1-alpha/2,2*n)
err2 = pchisq(c22,2*n+2)-pchisq(c11,2*n+2)-1+alpha #check the error for eq. (2)
err1
err2
myfun <- function(c,n,alpha){
pchisq(qchisq(pchisq(c,2*n)+1-alpha,2*n),2*n+2)-pchisq(c,2*n+2)-1+alpha
}
n = 10
alpha = 0.5
a = qchisq(alpha/2,2*n)
b = qchisq(alpha/2,2*n+2)
r = uniroot(myfun,n=n,alpha=alpha,interval = c(a,b))
c1 = r$root
c2 = qchisq(pchisq(c1,2*n)+1-alpha,2*n)
err1 = pchisq(c2,2*n+2)-pchisq(c1,2*n+2)-1+alpha #check the error for eq. (2)
## check the error if we use the approximate method
c11 = qchisq(alpha/2,2*n)
c22 = qchisq(1-alpha/2,2*n)
err2 = pchisq(c22,2*n+2)-pchisq(c11,2*n+2)-1+alpha #check the error for eq. (2)
print(paste0("exact parameters C1=",c1,"c2=",c2))
print(paste0("the error due to root finding is",err1))
print(paste0("half and half parameters C1=",c11,"c2=",c22))
print(paste0("the error due to the approximation is",err2))
myfun <- function(c,n,alpha){
pchisq(qchisq(pchisq(c,2*n)+1-alpha,2*n),2*n+2)-pchisq(c,2*n+2)-1+alpha
}
n = 10
alpha = 0.5
a = qchisq(alpha/2,2*n)
b = qchisq(alpha/2,2*n+2)
r = uniroot(myfun,n=n,alpha=alpha,interval = c(a,b))
c1 = r$root
c2 = qchisq(pchisq(c1,2*n)+1-alpha,2*n)
err1 = pchisq(c2,2*n+2)-pchisq(c1,2*n+2)-1+alpha #check the error for eq. (2)
## check the error if we use the approximate method
c11 = qchisq(alpha/2,2*n)
c22 = qchisq(1-alpha/2,2*n)
err2 = pchisq(c22,2*n+2)-pchisq(c11,2*n+2)-1+alpha #check the error for eq. (2)
print(paste0("exact parameters C1 = ",c1," c2 = ",round(c2,5)))
print(paste0("the error due to root finding is ",err1))
print(paste0("half and half parameters C1 = ",c11," c2 = ",c22))
print(paste0("the error due to the approximation is ",err2))
myfun <- function(c,n,alpha){
pchisq(qchisq(pchisq(c,2*n)+1-alpha,2*n),2*n+2)-pchisq(c,2*n+2)-1+alpha
}
n = 10
alpha = 0.5
a = qchisq(alpha/2,2*n)
b = qchisq(alpha/2,2*n+2)
r = uniroot(myfun,n=n,alpha=alpha,interval = c(a,b))
c1 = r$root
c2 = qchisq(pchisq(c1,2*n)+1-alpha,2*n)
err1 = pchisq(c2,2*n+2)-pchisq(c1,2*n+2)-1+alpha #check the error for eq. (2)
## check the error if we use the approximate method
c11 = qchisq(alpha/2,2*n)
c22 = qchisq(1-alpha/2,2*n)
err2 = pchisq(c22,2*n+2)-pchisq(c11,2*n+2)-1+alpha #check the error for eq. (2)
print(paste0("exact parameters C1 = ",c1," c2 = ",round(c2,5)))
print("the error due to root finding is ",err1)
print(paste0("half and half parameters C1 = ",c11," c2 = ",c22))
print(paste0("the error due to the approximation is ",err2))
myfun <- function(c,n,alpha){
pchisq(qchisq(pchisq(c,2*n)+1-alpha,2*n),2*n+2)-pchisq(c,2*n+2)-1+alpha
}
n = 10
alpha = 0.5
a = qchisq(alpha/2,2*n)
b = qchisq(alpha/2,2*n+2)
r = uniroot(myfun,n=n,alpha=alpha,interval = c(a,b))
c1 = r$root
c2 = qchisq(pchisq(c1,2*n)+1-alpha,2*n)
err1 = pchisq(c2,2*n+2)-pchisq(c1,2*n+2)-1+alpha #check the error for eq. (2)
## check the error if we use the approximate method
c11 = qchisq(alpha/2,2*n)
c22 = qchisq(1-alpha/2,2*n)
err2 = pchisq(c22,2*n+2)-pchisq(c11,2*n+2)-1+alpha #check the error for eq. (2)
print(paste0("exact parameters C1 = ",c1," c2 = ",c2))
print(paste0("the error due to root finding is ",err1))
print(paste0("half and half parameters C1 = ",c11," c2 = ",c22))
print(paste0("the error due to the approximation is ",err2))
abs(23)
myfun <- function(c,n,alpha)
pchisq(qchisq(pchisq(c,2*n)+1-alpha,2*n),2*n+2)-pchisq(c,2*n+2)-1+alpha
n = 10
alpha = 0.5
a = qchisq(alpha/2,2*n)
b = qchisq(alpha/2,2*n+2)
## solve the equation by using the root finding algorithm
r = uniroot(myfun,n=n,alpha=alpha,interval = c(a,b))
c1 = r$root
c2 = qchisq(pchisq(c1,2*n)+1-alpha,2*n)
print(paste0("exact parameters C1 = ",c1,", C2 = ",c2))
err1 = pchisq(c2,2*n+2)-pchisq(c1,2*n+2)-1+alpha #check the error for eq. (2)
print(paste0("the error due to the root finding is ",abs(err1)))
## the approximate method
c11 = qchisq(alpha/2,2*n)
c22 = qchisq(1-alpha/2,2*n)
print(paste0("rough parameters C1 = ",c11,", C2 = ",c22))
err2 = pchisq(c22,2*n+2)-pchisq(c11,2*n+2)-1+alpha #check the error for eq. (2)
print(paste0("the error due to the approximation is ",abs(err2)))
output = data.frame(exact=c(c1,c2),rough=c(c11,c22))
print(output)
myfun <- function(c,n,alpha)
pchisq(qchisq(pchisq(c,2*n)+1-alpha,2*n),2*n+2)-pchisq(c,2*n+2)-1+alpha
n = 10
alpha = 0.5
a = qchisq(alpha/2,2*n)
b = qchisq(alpha/2,2*n+2)
## solve the equation by using the root finding algorithm
r = uniroot(myfun,n=n,alpha=alpha,interval = c(a,b))
c1 = r$root
c2 = qchisq(pchisq(c1,2*n)+1-alpha,2*n)
print(paste0("exact parameters C1 = ",c1,", C2 = ",c2))
err1 = pchisq(c2,2*n+2)-pchisq(c1,2*n+2)-1+alpha #check the error for eq. (2)
print(paste0("the error due to the root finding is ",abs(err1)))
## the approximate method
c11 = qchisq(alpha/2,2*n)
c22 = qchisq(1-alpha/2,2*n)
print(paste0("rough parameters C1 = ",c11,", C2 = ",c22))
err2 = pchisq(c22,2*n+2)-pchisq(c11,2*n+2)-1+alpha #check the error for eq. (2)
print(paste0("the error due to the approximation is ",abs(err2)))
output = data.frame(exact=c(c1,c2,err1),rough=c(c11,c22,err2),row.names = c("C1","C2","error"))
kable(output)
myfun <- function(c,n,alpha)
pchisq(qchisq(pchisq(c,2*n)+1-alpha,2*n),2*n+2)-pchisq(c,2*n+2)-1+alpha
n = 10
alpha = 0.5
a = qchisq(alpha/2,2*n)
b = qchisq(alpha/2,2*n+2)
## solve the equation by using the root finding algorithm
r = uniroot(myfun,n=n,alpha=alpha,interval = c(a,b))
c1 = r$root
c2 = qchisq(pchisq(c1,2*n)+1-alpha,2*n)
print(paste0("exact parameters C1 = ",c1,", C2 = ",c2))
err1 = pchisq(c2,2*n+2)-pchisq(c1,2*n+2)-1+alpha #check the error for eq. (2)
print(paste0("the error due to the root finding is ",abs(err1)))
## the approximate method
c11 = qchisq(alpha/2,2*n)
c22 = qchisq(1-alpha/2,2*n)
print(paste0("rough parameters C1 = ",c11,", C2 = ",c22))
err2 = pchisq(c22,2*n+2)-pchisq(c11,2*n+2)-1+alpha #check the error for eq. (2)
print(paste0("the error due to the approximation is ",abs(err2)))
output = data.frame(exact=c(c1,c2,err1),rough=c(c11,c22,err2),row.names = c("C1","C2","error"))
knit::kable(output)
myfun <- function(c,n,alpha)
pchisq(qchisq(pchisq(c,2*n)+1-alpha,2*n),2*n+2)-pchisq(c,2*n+2)-1+alpha
n = 10
alpha = 0.5
a = qchisq(alpha/2,2*n)
b = qchisq(alpha/2,2*n+2)
## solve the equation by using the root finding algorithm
r = uniroot(myfun,n=n,alpha=alpha,interval = c(a,b))
c1 = r$root
c2 = qchisq(pchisq(c1,2*n)+1-alpha,2*n)
print(paste0("exact parameters C1 = ",c1,", C2 = ",c2))
err1 = pchisq(c2,2*n+2)-pchisq(c1,2*n+2)-1+alpha #check the error for eq. (2)
print(paste0("the error due to the root finding is ",abs(err1)))
## the approximate method
c11 = qchisq(alpha/2,2*n)
c22 = qchisq(1-alpha/2,2*n)
print(paste0("rough parameters C1 = ",c11,", C2 = ",c22))
err2 = pchisq(c22,2*n+2)-pchisq(c11,2*n+2)-1+alpha #check the error for eq. (2)
print(paste0("the error due to the approximation is ",abs(err2)))
output = data.frame(exact=c(c1,c2,err1),rough=c(c11,c22,err2),row.names = c("C1","C2","error"))
knitr::kable(output)
output
?kable
n = 100
output = mysolver(n,alpha)
myfun <- function(c,n,alpha)
pchisq(qchisq(pchisq(c,2*n)+1-alpha,2*n),2*n+2)-pchisq(c,2*n+2)-1+alpha
mysolver <- function(n,alpha){
a = qchisq(alpha/2,2*n)
b = qchisq(alpha/2,2*n+2)
## solve the equation by using the root finding algorithm
r = uniroot(myfun,n=n,alpha=alpha,interval = c(a,b))
c1 = r$root
c2 = qchisq(pchisq(c1,2*n)+1-alpha,2*n)
err1 = pchisq(c2,2*n+2)-pchisq(c1,2*n+2)-1+alpha #check the error for eq. (2)
## the approximate method
c11 = qchisq(alpha/2,2*n)
c22 = qchisq(1-alpha/2,2*n)
err2 = pchisq(c22,2*n+2)-pchisq(c11,2*n+2)-1+alpha #check the error for eq. (2)
output = data.frame(exact=c(c1,c2,abs(err1)),rough=c(c11,c22,abs(err2)),
row.names = c("C1","C2","error"))
return(output)
}
alpha = 0.5
n = 10
output = mysolver(n,alpha)
knitr::kable(output,"html",caption = "n=10, alpha=0.05")
n = 100
output = mysolver(n,alpha)
knitr::kable(output,"html",caption = "n=100, alpha=0.05",digits = 10)
37.44/4
blogdown::serve_site()
blogdown::serve_site()
blogdown::serve_site()
